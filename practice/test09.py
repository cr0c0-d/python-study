'''
 빌트인 데이터 타입
 built-in data type
 언어 자체에서 제공하는 데이터 타입, 컬렉션 데이터 타입.

 * 기본 데이터 타입 : 정수 int, 부동소수 float, 문자열
 * 컬렉션 데이터 타입 : 리스트, 튜플, 셋, 딕셔너리
'''

# 정수형 연산
# 잘 모르는 것만 기록

a = 13
b = 4

# 산술연산
print(a / b)    # 나누기 (소수점 포함) => 3.25
print(a // b)   # 나누기 (소수점 제외) => 3
print(-a)       # 부호를 바꿈 => -13
print(abs(-a))  # 절대값   => 13
print(a ** b)   # a의 b승     => 28561

# 비트 연산
print(a << 2)   # 왼쪽 시프트 (a에 2^2를 곱한 것과 동일)     => 52
print(a >> 1)   # 오른쪽 시프트 (a를 2^1로 나눈 것과 동일)    => 6

# 부동 소수형 연산
print(10.0 % 3.2)   # 모듈러   => 0.39999999999999947  => ???
'''
결과가 0.4가 아니라 0.39999999999999947 ???
=> 엡실론(epsilon) 때문이다?
파이썬이 부동 소수형 데이터를 이진법으로 표현하기 때문에 생기는 오차.
'''

'''
컬렉션 데이터 타입
리스트(list), 튜플(tuple), 딕셔너리(dictionary), 셋(set), 문자열(string)

수정가능 여부에 따라 뮤터블 객체(mutable object) / 이뮤터블 객체(immutable object)
* 뮤터블 객체 : 리스트, 딕셔너리, 셋
* 이뮤터블 객체 : 정수, 부동소수점, 문자열, 튜플
'''

# 뮤터블 객체
my_list = [1, 2, 3, 4, 5]   # 리스트 객체 생성
my_list[4] = 6          # 리스트 원소 변경
print(my_list)      # [1, 2, 3, 4, 6]

# 이뮤터블 객체
a = 4
b = a   # a = 4, b = 4  / b는 a를 참조x, a가 참조한 4를 참조
b += 2  # b = 6     / 기존에 참조한 객체를 수정하지 않음, 새 객체 6을 참조
